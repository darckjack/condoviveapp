{"version":3,"file":"static/webpack/static/development/pages/signup.js.292eecdd3017be72347d.hot-update.js","sources":["webpack:///./components/signup_form.js"],"sourcesContent":["import { Component } from 'react';\nimport FormValidator from \"../services/form_validator\";\nimport USER_FORM_RULES from \"../validators/user_form_rules\";\nimport ACCOUNT_FORM_RULES from \"../validators/account_form_rules\";\nimport AccountType from \"./account_type\";\n\nexport default class SignupForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validator = new FormValidator(USER_FORM_RULES.concat(ACCOUNT_FORM_RULES));\n    this.submitted = false;\n\n    this.state = {\n      user: {\n        name: '',\n        email: '',\n        password: '',\n        password_confirmation: ''\n      },\n      account: {\n        name: '',\n        email: '',\n        phone: '',\n        account_type_id: 0\n      },\n      condo: {\n        name: ''\n      },\n      units: {\n        qty: 0\n      },\n      validation: this.validator.valid(),\n    }\n  }\n\n  handleInputChange = event => {\n    event.preventDefault();\n\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleAccountType = accountType => {\n    this.setState({ account: { accountType: parseInt(accountType) }});\n  };\n\n  render() {\n    let validation = this.submitted ?\n      this.validator.validate(this.state) :\n      this.state.validation;\n\n    return (\n      <form>\n        <h3>Usuario</h3>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.user.email.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.email\">Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                     name=\"user.email\"\n                     placeholder=\"john@doe.com\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.email.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.user.name.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.name\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"user.name\"\n                     placeholder=\"Nombre\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.name.message}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.user.password.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.password\">Contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                     name=\"user.password\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.password.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.user.password_confirmation.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.password_confirmation\">Confirme su contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                     name=\"user.password_confirmation\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.password_confirmation.message}</span>\n            </div>\n          </div>\n        </div>\n\n        <h3>Informacion Personal</h3>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.account.name.isInvalid && 'has-error'}>\n              <label htmlFor=\"account.name\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"account.name\"\n                     placeholder=\"Juan Gomez\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.account.name.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.account.email.isInvalid && 'has-error'}>\n              <label htmlFor=\"account.email\">Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                     name=\"account.email\"\n                     placeholder=\"john@doe.com\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.account.email.message}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.account.phone.isInvalid && 'has-error'}>\n              <label htmlFor=\"account.phone\">Telefono</label>\n              <input type=\"phone\" className=\"form-control\"\n                     name=\"account.phone\"\n                     placeholder=\"(xxx)xxx-xxxx\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.account.phone.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <AccountType onAccountTypeChange={this.handleAccountType} />\n          </div>\n        </div>\n\n        <h3>Condominio</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.condo.name.isInvalid && 'has-error'}>\n              <label htmlFor=\"condo.name\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"condo.name\"\n                     placeholder=\"Nombre\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.condo.name.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.units.qty.isInvalid && 'has-error'}>\n              <label htmlFor=\"units.qty\">Unidades</label>\n              <input type=\"number\" name=\"units.qty\"\n                     className=\"form-control\"\n                     placeholder=\"No. de unidades\"\n                     onChange={this.handleInputChange}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n  \n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8BA;AACA;AACA;AAGA;AACA;AApCA;AAsCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AArCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAnBA;AANA;AA2BA;AACA;;;AAaA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AAvKA;AACA;;;;;A","sourceRoot":""}