{"version":3,"file":"static/webpack/static/development/pages/signup.js.c0f5503a790c483241dc.hot-update.js","sources":["webpack:///./components/signup_form.js","webpack:///./pages/signup.js"],"sourcesContent":["import { Component } from 'react';\nimport FormValidator from \"../services/form_validator\";\nimport USER_FORM_RULES from \"../validators/user_form_rules\";\nimport ACCOUNT_FORM_RULES from \"../validators/account_form_rules\";\nimport AccountType from \"./account_type\";\n\nexport default class SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validator = new FormValidator(USER_FORM_RULES.concat(ACCOUNT_FORM_RULES));\n    this.submitted = false;\n\n    this.state = {\n      user: {\n        name: '',\n        email: '',\n        password: '',\n        password_confirmation: ''\n      },\n      account: {\n        name: '',\n        email: '',\n        phone: '',\n        account_type_id: 0\n      },\n      condo: {\n        name: ''\n      },\n      units: {\n        qty: 0\n      },\n      validation: this.validator.valid(),\n    }\n  }\n\n  handleInputChange = event => {\n    event.preventDefault();\n\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleAccountType = accountType => {\n    this.setState({ account: { accountType: parseInt(accountType) }});\n  };\n\n  render() {\n    let validation = this.submitted ?\n      this.validator.validate(this.state) :\n      this.state.validation;\n\n    return (\n      <form>\n        <h3>Usuario</h3>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.user.email.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.email\">Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                     name=\"user.email\"\n                     placeholder=\"john@doe.com\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.email.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.user.name.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.name\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"user.name\"\n                     placeholder=\"Nombre\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.name.message}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.user.password.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.password\">Contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                     name=\"user.password\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.password.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.user.password_confirmation.isInvalid && 'has-error'}>\n              <label htmlFor=\"user.password_confirmation\">Confirme su contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                     name=\"user.password_confirmation\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.user.password_confirmation.message}</span>\n            </div>\n          </div>\n        </div>\n\n        <h3>Informacion Personal</h3>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.account.name.isInvalid && 'has-error'}>\n              <label htmlFor=\"account.name\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"account.name\"\n                     placeholder=\"Juan Gomez\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.account.name.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.account.email.isInvalid && 'has-error'}>\n              <label htmlFor=\"account.email\">Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                     name=\"account.email\"\n                     placeholder=\"john@doe.com\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.account.email.message}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.account.phone.isInvalid && 'has-error'}>\n              <label htmlFor=\"account.phone\">Telefono</label>\n              <input type=\"phone\" className=\"form-control\"\n                     name=\"account.phone\"\n                     placeholder=\"(xxx)xxx-xxxx\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.account.phone.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <AccountType onAccountTypeChange={this.handleAccountType} />\n          </div>\n        </div>\n\n        <h3>Condominio</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.condo.name.isInvalid && 'has-error'}>\n              <label htmlFor=\"condo.name\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"condo.name\"\n                     placeholder=\"Nombre\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.condo.name.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.units.qty.isInvalid && 'has-error'}>\n              <label htmlFor=\"units.qty\">Unidades</label>\n              <input type=\"number\" name=\"units.qty\"\n                     className=\"form-control\"\n                     placeholder=\"No. de unidades\"\n                     onChange={this.handleInputChange}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n  \n}","import { Component } from 'react'\nimport Router from 'next/router'\nimport {\n  Container, \n  Title\n} from 'bloomer';\nimport fetch from 'isomorphic-unfetch';\nimport API_URL from '../config/api';\nimport SignUpForm from \"../components/signup_form\";\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: '',\n      userEmail: '',\n      userPassword: '',\n      userPasswordConfirm: '',\n      accountName: '',\n      accountEmail: '',\n      accountPhone: '',\n      accountType: 1,\n      condoName: '',\n      unitNumber: 0,\n    };\n\n    this.handleAccountType = this.handleAccountType.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n\n    this.setState( prevState => {\n      if (name === \"unitNumber\") {\n        return {\n          [name]: parseInt(value)\n        }\n      } else {\n        return {\n          [name]: value\n        }\n      }\n    });\n  }\n\n  handleAccountType(accountType) {\n    this.setState({ accountType: parseInt(accountType) })\n  }\n\n  async onFormSubmit(e) {\n    e.preventDefault();\n    const requestBody = {\n      user: {\n        name: this.state.userName,\n        email: this.state.userEmail,\n        password: this.state.userPassword,\n        password_confirmation: this.state.userPasswordConfirm\n      },\n      account: {\n        name: this.state.accountName,\n        email: this.state.accountEmail,\n        phone: this.state.accountPhone,\n        account_type_id: this.state.accountType\n      },\n      condo: {\n        name: this.state.condoName\n      },\n      units: {\n        qty: this.state.unitNumber\n      }\n    };\n\n\n    try {\n      const response = await fetch(API_URL + '/signup', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.auth_token);\n\n        Router.push('/authenticated', '/authenticated');\n      } else {\n        console.log(data.message);\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  render() {\n    return (\n      <Container isFluid style={{ marginTop: 20 }}>\n        <Title isSize={1} hasTextAlign='centered'>Condovive</Title>\n        <SignUpForm />\n      </Container>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8BA;AACA;AACA;AAGA;AACA;AApCA;AAsCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AArCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAnBA;AANA;AA2BA;AACA;;;AAavKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAlBA;AAmBA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;;;;AAEA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAhBA;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;;AADA;;AAQA;AACA;;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjGA;AACA;;;;;A","sourceRoot":""}