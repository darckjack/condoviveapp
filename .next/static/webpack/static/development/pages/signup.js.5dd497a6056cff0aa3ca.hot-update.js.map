{"version":3,"file":"static/webpack/static/development/pages/signup.js.5dd497a6056cff0aa3ca.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import { Component } from 'react'\nimport Router from 'next/router'\nimport fetch from 'isomorphic-unfetch';\nimport API_URL from '../config/api';\nimport SignUpForm from \"../components/signup_form\";\nimport { Alert } from \"reactstrap\";\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      errorMessage: ''\n    };\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <Alert color='danger' isOpen={this.state.error} toggle={this.onDismiss}>\n          {this.state.errorMessage}\n        </Alert>\n        <SignUpForm onFormSubmit={this.onFormSubmit} onError={this.handleError}/>\n      </div>\n    )\n  }\n\n  handleError = message => {\n    this.setState({\n      error: true,\n      errorMessage: message\n    })\n  };\n\n  onDismiss = () => {\n    this.setState({\n      error: false,\n    })\n  };\n\n  async onFormSubmit(formData) {\n    const requestBody = {\n      user: {\n        name: formData.userName,\n        email: formData.userEmail,\n        password: formData.userPassword,\n        password_confirmation: formData.userPasswordConfirm\n      },\n      account: {\n        name: formData.accountName,\n        email: formData.accountEmail,\n        phone: formData.accountPhone,\n        account_type_id: formData.accountType\n      },\n      condo: {\n        name: formData.condoName\n      },\n      units: {\n        qty: parseInt(formData.unitNumber)\n      }\n    };\n\n\n    console.log(requestBody);\n\n    try {\n      const response = await fetch(API_URL + '/signup', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.auth_token);\n\n        Router.push('/authenticated', '/authenticated');\n      } else {\n        this.setState({\n          error: true,\n          errorMessage: data.message\n        });\n        console.log(data.message);\n      }\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message\n      });\n      console.log(e.message);\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuBA;AACA;AACA;AAFA;AAIA;AACA;AA5BA;AA8BA;AACA;AADA;AAGA;AACA;AA/BA;AACA;AACA;AAFA;AAKA;AARA;AASA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;AAeA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAhBA;AAsBA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;;AADA;;AAQA;AACA;;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;;;;;;;AAzFA;AACA;;;;;A","sourceRoot":""}