{"version":3,"file":"static/webpack/static/development/pages/authenticated.js.6d30e910f9a55f5459cb.hot-update.js","sources":["webpack:///./pages/authenticated.js"],"sourcesContent":["import 'bulma/css/bulma.css';\nimport { Component } from 'react';\nimport Router from \"next/router\";\nimport {\n  Container,\n  Title,\n  Content,\n  Table,\n  Control,\n  Button\n} from 'bloomer';\nimport API_URL from \"../config/api\";\n\n\nexport default class Authenticated extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: \"\",\n      users: []\n    };\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async componentDidMount() {\n    if (localStorage.getItem('token') === null) {\n      Router.push('/', '/');\n    } else {\n      this.setState({ token: localStorage.getItem('token') });\n\n      const res = await fetch(API_URL + '/users', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      });\n      const data = await res.json();\n\n      this.setState({\n        users: data,\n      });\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    Router.push('/', '/');\n  }\n\n  render() {\n    return (\n      <Container>\n        <Title isSize={1} hasTextAlign='centered'>Condovive</Title>\n        <Content>\n          <h1>Has accedido correctamente</h1>\n        </Content>\n        <Control>\n          <Table isBordered isStriped>\n            <thead>\n            <tr>\n              <th>ID</th>\n              <th>Nombre</th>\n              <th>Correo Electronico</th>\n            </tr>\n            </thead>\n            <tbody>\n            {this.state.users.map(user => {\n              return (\n                <tr>\n                  <td>{user.id}</td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                </tr>\n              )\n            })}\n            </tbody>\n          </Table>\n        </Control>\n        <Button onClick={this.logout} style={{ marginTop: 20 }}>Cerrar sesion</Button>\n      </Container>\n    );\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAQA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AARA;AASA;AACA;;;;;;;;;;;;AAEA;;;;;AACA;;;;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;;AADA;;AAOA;AACA;;AADA;AAEA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtEA;AACA;;;;;A","sourceRoot":""}