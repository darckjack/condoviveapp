{"version":3,"file":"static/webpack/static/development/pages/signup.js.75e7d93cdda8d568d62e.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import { Component } from 'react'\nimport Router from 'next/router'\nimport {\n  Container, \n  Title\n} from 'bloomer';\nimport fetch from 'isomorphic-unfetch';\nimport API_URL from '../config/api';\nimport SignUpForm from \"../components/signup_form\";\n\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      request: {},\n    };\n\n    this.handleAccountType = this.handleAccountType.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n\n    this.setState( prevState => {\n      if (name === \"unitNumber\") {\n        return {\n          [name]: parseInt(value)\n        }\n      } else {\n        return {\n          [name]: value\n        }\n      }\n    });\n  }\n\n  handleAccountType(accountType) {\n    this.setState({ accountType: parseInt(accountType) })\n  }\n\n  async onFormSubmit(formData) {\n    this.setState({ request: formData });\n    const requestBody = {\n      user: {\n        name: formData.userName,\n        email: formData.userEmail,\n        password: formData.userPassword,\n        password_confirmation: formData.userPasswordConfirm\n      },\n      account: {\n        name: formData.accountName,\n        email: formData.accountEmail,\n        phone: formData.accountPhone,\n        account_type_id: formData.accountType\n      },\n      condo: {\n        name: formData.condoName\n      },\n      units: {\n        qty: formData.unitNumber\n      }\n    };\n\n\n    console.log(requestBody);\n\n    try {\n      const response = await fetch(API_URL + '/signup', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.auth_token);\n\n        Router.push('/authenticated', '/authenticated');\n      } else {\n        console.log(data.message);\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  render() {\n    return (\n      <Container isFluid style={{ marginTop: 20 }}>\n        <Title isSize={1} hasTextAlign='centered'>Condovive</Title>\n        <SignUpForm onFormSubmit={this.onFormSubmit}/>\n      </Container>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;;;;AAEA;;;;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAhBA;AAsBA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;;AADA;;AAQA;AACA;;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1FA;AACA;;;;;A","sourceRoot":""}