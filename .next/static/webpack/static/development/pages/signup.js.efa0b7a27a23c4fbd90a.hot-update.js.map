{"version":3,"file":"static/webpack/static/development/pages/signup.js.efa0b7a27a23c4fbd90a.hot-update.js","sources":["webpack:///./components/signup_form.js"],"sourcesContent":["import { Component } from 'react';\nimport FormValidator from \"../services/form_validator\";\nimport USER_FORM_RULES from \"../validators/user_form_rules\";\nimport ACCOUNT_FORM_RULES from \"../validators/account_form_rules\";\nimport CONDO_FORM_RULES from \"../validators/condo_form_rules\";\nimport UNIT_FORM_RULES from \"../validators/unit_form_rules.js\";\n\nimport AccountType from \"./account_type\";\n\nexport default class SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validator = new FormValidator(USER_FORM_RULES.concat(ACCOUNT_FORM_RULES, CONDO_FORM_RULES, UNIT_FORM_RULES));\n    this.submitted = false;\n\n    this.state = {\n      userName: '',\n      userEmail: '',\n      userPassword: '',\n      userPasswordConfirm: '',\n      accountName: '',\n      accountEmail: '',\n      accountPhone: '',\n      accountType: 1,\n      condoName: '',\n      unitNumber: 0,\n      validation: this.validator.valid(),\n    }\n  }\n\n  handleInputChange = event => {\n    event.preventDefault();\n\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleAccountType = accountType => {\n    this.setState({ account: { accountType: parseInt(accountType) }});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const validation = this.validator.validate(this.state);\n    this.setState({ validation });\n    this.submitted = true;\n\n    if (validation.isValid) {\n\n    }\n  };\n\n  render() {\n    let validation = this.submitted ?\n      this.validator.validate(this.state) :\n      this.state.validation;\n\n    return (\n      <form>\n        <h3>Usuario</h3>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.userEmail.isInvalid && 'has-error'}>\n              <label htmlFor=\"userEmail\">Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                     name=\"userEmail\"\n                     placeholder=\"john@doe.com\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.userEmail.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.userName.isInvalid && 'has-error'}>\n              <label htmlFor=\"userName\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"userName\"\n                     placeholder=\"Nombre\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.userName.message}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.userPassword.isInvalid && 'has-error'}>\n              <label htmlFor=\"userPassword\">Contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                     name=\"userPassword\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.userPassword.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.userPasswordConfirm.isInvalid && 'has-error'}>\n              <label htmlFor=\"userPasswordConfirm\">Confirme su contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                     name=\"userPasswordConfirm\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.userPasswordConfirm.message}</span>\n            </div>\n          </div>\n        </div>\n\n        <h3>Informacion Personal</h3>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.accountName.isInvalid && 'has-error'}>\n              <label htmlFor=\"accountName\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"accountName\"\n                     placeholder=\"Juan Gomez\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.accountName.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.accountEmail.isInvalid && 'has-error'}>\n              <label htmlFor=\"accountEmail\">Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                     name=\"accountEmail\"\n                     placeholder=\"john@doe.com\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.accountEmail.message}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.accountPhone.isInvalid && 'has-error'}>\n              <label htmlFor=\"accountPhone\">Telefono</label>\n              <input type=\"phone\" className=\"form-control\"\n                     name=\"accountPhone\"\n                     placeholder=\"(xxx)xxx-xxxx\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.accountPhone.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <AccountType onAccountTypeChange={this.handleAccountType} />\n          </div>\n        </div>\n\n        <h3>Condominio</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className={validation.condoName.isInvalid && 'has-error'}>\n              <label htmlFor=\"condoName\">Nombre</label>\n              <input type=\"text\" className=\"form-control\"\n                     name=\"condoName\"\n                     placeholder=\"Nombre\"\n                     onChange={this.handleInputChange}\n              />\n              <span className=\"help-block\">{validation.condoName.message}</span>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className={validation.unitNumber.isInvalid && 'has-error'}>\n              <label htmlFor=\"unitNumber\">Unidades</label>\n              <input type=\"number\" name=\"unitNumber\"\n                     className=\"form-control\"\n                     placeholder=\"No. de unidades\"\n                     onChange={this.handleInputChange}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n  \n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AACA;AAGA;AACA;AA5BA;AA8BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhCA;AAkCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAzCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AANA;AAmBA;AACA;;;AAysourceRoot":""}